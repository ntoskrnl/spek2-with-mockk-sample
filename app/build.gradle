plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'de.mannodermaus.android-junit5'
}

android {
  compileSdkVersion 30
  buildToolsVersion "30.0.3"

  defaultConfig {
    applicationId "com.example.spek_mockk"
    minSdkVersion 21
    targetSdkVersion 30
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  testOptions {
    junitPlatform {
      jacocoOptions {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
      }
    }
    unitTests.all {
      testLogging.events = ["passed", "skipped", "failed"]
    }
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

  implementation 'androidx.core:core-ktx:1.3.2'
  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'com.google.android.material:material:1.3.0'

  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.jetbrains.kotlin:kotlin-test'
  testImplementation "io.mockk:mockk:$mockk_version"
  // uncomment this to make Spek tests run from IDE
//  testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"

  // spek
  testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
  testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spek_version"

  // spek requires kotlin-reflect, omit when already in classpath
  testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}